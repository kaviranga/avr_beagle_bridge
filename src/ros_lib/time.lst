   1               		.file	"time.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_ZN3ros16normalizeSecNSecERmS0_
  12               	_ZN3ros16normalizeSecNSecERmS0_:
  13               	.LFB90:
  14               		.file 1 "ros_lib/time.cpp"
   1:ros_lib/time.cpp **** /* 
   2:ros_lib/time.cpp ****  * Software License Agreement (BSD License)
   3:ros_lib/time.cpp ****  *
   4:ros_lib/time.cpp ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ros_lib/time.cpp ****  * All rights reserved.
   6:ros_lib/time.cpp ****  *
   7:ros_lib/time.cpp ****  * Redistribution and use in source and binary forms, with or without
   8:ros_lib/time.cpp ****  * modification, are permitted provided that the following conditions
   9:ros_lib/time.cpp ****  * are met:
  10:ros_lib/time.cpp ****  *
  11:ros_lib/time.cpp ****  *  * Redistributions of source code must retain the above copyright
  12:ros_lib/time.cpp ****  *    notice, this list of conditions and the following disclaimer.
  13:ros_lib/time.cpp ****  *  * Redistributions in binary form must reproduce the above
  14:ros_lib/time.cpp ****  *    copyright notice, this list of conditions and the following
  15:ros_lib/time.cpp ****  *    disclaimer in the documentation and/or other materials provided
  16:ros_lib/time.cpp ****  *    with the distribution.
  17:ros_lib/time.cpp ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ros_lib/time.cpp ****  *    contributors may be used to endorse or promote prducts derived
  19:ros_lib/time.cpp ****  *    from this software without specific prior written permission.
  20:ros_lib/time.cpp ****  *
  21:ros_lib/time.cpp ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ros_lib/time.cpp ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ros_lib/time.cpp ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ros_lib/time.cpp ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ros_lib/time.cpp ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ros_lib/time.cpp ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ros_lib/time.cpp ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ros_lib/time.cpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ros_lib/time.cpp ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ros_lib/time.cpp ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ros_lib/time.cpp ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ros_lib/time.cpp ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ros_lib/time.cpp ****  */
  34:ros_lib/time.cpp **** 
  35:ros_lib/time.cpp **** #include "ros.h"
  36:ros_lib/time.cpp **** #include "ros/time.h"
  37:ros_lib/time.cpp **** 
  38:ros_lib/time.cpp **** namespace ros
  39:ros_lib/time.cpp **** {
  40:ros_lib/time.cpp ****   void normalizeSecNSec(unsigned long& sec, unsigned long& nsec){
  15               		.loc 1 40 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF92      		push r12
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 12, -2
  22 0002 DF92      		push r13
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 13, -3
  26 0004 EF92      		push r14
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 5
  29               		.cfi_offset 14, -4
  30 0006 FF92      		push r15
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 6
  33               		.cfi_offset 15, -5
  34 0008 0F93      		push r16
  35               	.LCFI4:
  36               		.cfi_def_cfa_offset 7
  37               		.cfi_offset 16, -6
  38 000a 1F93      		push r17
  39               	.LCFI5:
  40               		.cfi_def_cfa_offset 8
  41               		.cfi_offset 17, -7
  42 000c CF93      		push r28
  43               	.LCFI6:
  44               		.cfi_def_cfa_offset 9
  45               		.cfi_offset 28, -8
  46 000e DF93      		push r29
  47               	.LCFI7:
  48               		.cfi_def_cfa_offset 10
  49               		.cfi_offset 29, -9
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 8 */
  53               	.L__stack_usage = 8
  54 0010 8C01      		movw r16,r24
  55 0012 EB01      		movw r28,r22
  56               	.LBB2:
  41:ros_lib/time.cpp ****     unsigned long nsec_part= nsec % 1000000000UL;
  57               		.loc 1 41 0
  58 0014 6881      		ld r22,Y
  59 0016 7981      		ldd r23,Y+1
  60 0018 8A81      		ldd r24,Y+2
  61 001a 9B81      		ldd r25,Y+3
  62               	.LVL1:
  42:ros_lib/time.cpp ****     unsigned long sec_part = nsec / 1000000000UL;
  63               		.loc 1 42 0
  64 001c 20E0      		ldi r18,0
  65 001e 3AEC      		ldi r19,lo8(-54)
  66 0020 4AE9      		ldi r20,lo8(-102)
  67 0022 5BE3      		ldi r21,lo8(59)
  68 0024 0E94 0000 		call __udivmodsi4
  69               	.LVL2:
  43:ros_lib/time.cpp ****     sec += sec_part;
  70               		.loc 1 43 0
  71 0028 F801      		movw r30,r16
  72 002a C080      		ld r12,Z
  73 002c D180      		ldd r13,Z+1
  74 002e E280      		ldd r14,Z+2
  75 0030 F380      		ldd r15,Z+3
  76 0032 C20E      		add r12,r18
  77 0034 D31E      		adc r13,r19
  78 0036 E41E      		adc r14,r20
  79 0038 F51E      		adc r15,r21
  80 003a C082      		st Z,r12
  81 003c D182      		std Z+1,r13
  82 003e E282      		std Z+2,r14
  83 0040 F382      		std Z+3,r15
  44:ros_lib/time.cpp ****     nsec = nsec_part;
  84               		.loc 1 44 0
  85 0042 6883      		st Y,r22
  86 0044 7983      		std Y+1,r23
  87 0046 8A83      		std Y+2,r24
  88 0048 9B83      		std Y+3,r25
  89               	/* epilogue start */
  90               	.LBE2:
  45:ros_lib/time.cpp ****   }
  91               		.loc 1 45 0
  92 004a DF91      		pop r29
  93 004c CF91      		pop r28
  94               	.LVL3:
  95 004e 1F91      		pop r17
  96 0050 0F91      		pop r16
  97 0052 FF90      		pop r15
  98 0054 EF90      		pop r14
  99 0056 DF90      		pop r13
 100 0058 CF90      		pop r12
 101 005a 0895      		ret
 102               		.cfi_endproc
 103               	.LFE90:
 105               	.global	_ZN3ros4Time8fromNSecEl
 107               	_ZN3ros4Time8fromNSecEl:
 108               	.LFB91:
  46:ros_lib/time.cpp **** 
  47:ros_lib/time.cpp ****   Time& Time::fromNSec(long t)
  48:ros_lib/time.cpp ****   {
 109               		.loc 1 48 0
 110               		.cfi_startproc
 111               	.LVL4:
 112 005c CF93      		push r28
 113               	.LCFI8:
 114               		.cfi_def_cfa_offset 3
 115               		.cfi_offset 28, -2
 116 005e DF93      		push r29
 117               	.LCFI9:
 118               		.cfi_def_cfa_offset 4
 119               		.cfi_offset 29, -3
 120               	/* prologue: function */
 121               	/* frame size = 0 */
 122               	/* stack size = 2 */
 123               	.L__stack_usage = 2
 124 0060 EC01      		movw r28,r24
  49:ros_lib/time.cpp ****     sec = t / 1000000000;
 125               		.loc 1 49 0
 126 0062 CB01      		movw r24,r22
 127 0064 BA01      		movw r22,r20
 128 0066 20E0      		ldi r18,0
 129 0068 3AEC      		ldi r19,lo8(-54)
 130 006a 4AE9      		ldi r20,lo8(-102)
 131 006c 5BE3      		ldi r21,lo8(59)
 132 006e 0E94 0000 		call __divmodsi4
 133 0072 2883      		st Y,r18
 134 0074 3983      		std Y+1,r19
 135 0076 4A83      		std Y+2,r20
 136 0078 5B83      		std Y+3,r21
  50:ros_lib/time.cpp ****     nsec = t % 1000000000;
 137               		.loc 1 50 0
 138 007a 6C83      		std Y+4,r22
 139 007c 7D83      		std Y+5,r23
 140 007e 8E83      		std Y+6,r24
 141 0080 9F83      		std Y+7,r25
  51:ros_lib/time.cpp ****     normalizeSecNSec(sec, nsec);
 142               		.loc 1 51 0
 143 0082 BE01      		movw r22,r28
 144 0084 6C5F      		subi r22,-4
 145 0086 7F4F      		sbci r23,-1
 146 0088 CE01      		movw r24,r28
 147 008a 0E94 0000 		call _ZN3ros16normalizeSecNSecERmS0_
 148               	.LVL5:
  52:ros_lib/time.cpp ****     return *this;
  53:ros_lib/time.cpp ****   }
 149               		.loc 1 53 0
 150 008e CE01      		movw r24,r28
 151               	/* epilogue start */
 152 0090 DF91      		pop r29
 153 0092 CF91      		pop r28
 154               	.LVL6:
 155 0094 0895      		ret
 156               		.cfi_endproc
 157               	.LFE91:
 159               	.global	_ZN3ros4TimepLERKNS_8DurationE
 161               	_ZN3ros4TimepLERKNS_8DurationE:
 162               	.LFB92:
  54:ros_lib/time.cpp **** 
  55:ros_lib/time.cpp ****   Time& Time::operator +=(const Duration &rhs)
  56:ros_lib/time.cpp ****   {
 163               		.loc 1 56 0
 164               		.cfi_startproc
 165               	.LVL7:
 166 0096 0F93      		push r16
 167               	.LCFI10:
 168               		.cfi_def_cfa_offset 3
 169               		.cfi_offset 16, -2
 170 0098 1F93      		push r17
 171               	.LCFI11:
 172               		.cfi_def_cfa_offset 4
 173               		.cfi_offset 17, -3
 174 009a CF93      		push r28
 175               	.LCFI12:
 176               		.cfi_def_cfa_offset 5
 177               		.cfi_offset 28, -4
 178 009c DF93      		push r29
 179               	.LCFI13:
 180               		.cfi_def_cfa_offset 6
 181               		.cfi_offset 29, -5
 182               	/* prologue: function */
 183               	/* frame size = 0 */
 184               	/* stack size = 4 */
 185               	.L__stack_usage = 4
 186 009e EC01      		movw r28,r24
 187 00a0 FB01      		movw r30,r22
  57:ros_lib/time.cpp ****     sec += rhs.sec;
 188               		.loc 1 57 0
 189 00a2 4881      		ld r20,Y
 190 00a4 5981      		ldd r21,Y+1
 191 00a6 6A81      		ldd r22,Y+2
 192 00a8 7B81      		ldd r23,Y+3
 193 00aa 0081      		ld r16,Z
 194 00ac 1181      		ldd r17,Z+1
 195 00ae 2281      		ldd r18,Z+2
 196 00b0 3381      		ldd r19,Z+3
 197 00b2 400F      		add r20,r16
 198 00b4 511F      		adc r21,r17
 199 00b6 621F      		adc r22,r18
 200 00b8 731F      		adc r23,r19
 201 00ba 4883      		st Y,r20
 202 00bc 5983      		std Y+1,r21
 203 00be 6A83      		std Y+2,r22
 204 00c0 7B83      		std Y+3,r23
  58:ros_lib/time.cpp ****     nsec += rhs.nsec;
 205               		.loc 1 58 0
 206 00c2 4C81      		ldd r20,Y+4
 207 00c4 5D81      		ldd r21,Y+5
 208 00c6 6E81      		ldd r22,Y+6
 209 00c8 7F81      		ldd r23,Y+7
 210 00ca 0481      		ldd r16,Z+4
 211 00cc 1581      		ldd r17,Z+5
 212 00ce 2681      		ldd r18,Z+6
 213 00d0 3781      		ldd r19,Z+7
 214 00d2 400F      		add r20,r16
 215 00d4 511F      		adc r21,r17
 216 00d6 621F      		adc r22,r18
 217 00d8 731F      		adc r23,r19
 218 00da 4C83      		std Y+4,r20
 219 00dc 5D83      		std Y+5,r21
 220 00de 6E83      		std Y+6,r22
 221 00e0 7F83      		std Y+7,r23
  59:ros_lib/time.cpp ****     normalizeSecNSec(sec, nsec);
 222               		.loc 1 59 0
 223 00e2 BC01      		movw r22,r24
 224               	.LVL8:
 225 00e4 6C5F      		subi r22,-4
 226 00e6 7F4F      		sbci r23,-1
 227 00e8 0E94 0000 		call _ZN3ros16normalizeSecNSecERmS0_
 228               	.LVL9:
  60:ros_lib/time.cpp ****     return *this; 
  61:ros_lib/time.cpp ****   }
 229               		.loc 1 61 0
 230 00ec CE01      		movw r24,r28
 231               	/* epilogue start */
 232 00ee DF91      		pop r29
 233 00f0 CF91      		pop r28
 234               	.LVL10:
 235 00f2 1F91      		pop r17
 236 00f4 0F91      		pop r16
 237 00f6 0895      		ret
 238               		.cfi_endproc
 239               	.LFE92:
 241               	.global	_ZN3ros4TimemIERKNS_8DurationE
 243               	_ZN3ros4TimemIERKNS_8DurationE:
 244               	.LFB93:
  62:ros_lib/time.cpp **** 
  63:ros_lib/time.cpp ****   Time& Time::operator -=(const Duration &rhs){
 245               		.loc 1 63 0
 246               		.cfi_startproc
 247               	.LVL11:
 248 00f8 0F93      		push r16
 249               	.LCFI14:
 250               		.cfi_def_cfa_offset 3
 251               		.cfi_offset 16, -2
 252 00fa 1F93      		push r17
 253               	.LCFI15:
 254               		.cfi_def_cfa_offset 4
 255               		.cfi_offset 17, -3
 256 00fc CF93      		push r28
 257               	.LCFI16:
 258               		.cfi_def_cfa_offset 5
 259               		.cfi_offset 28, -4
 260 00fe DF93      		push r29
 261               	.LCFI17:
 262               		.cfi_def_cfa_offset 6
 263               		.cfi_offset 29, -5
 264               	/* prologue: function */
 265               	/* frame size = 0 */
 266               	/* stack size = 4 */
 267               	.L__stack_usage = 4
 268 0100 EC01      		movw r28,r24
 269 0102 FB01      		movw r30,r22
  64:ros_lib/time.cpp ****     sec += -rhs.sec;
 270               		.loc 1 64 0
 271 0104 4881      		ld r20,Y
 272 0106 5981      		ldd r21,Y+1
 273 0108 6A81      		ldd r22,Y+2
 274 010a 7B81      		ldd r23,Y+3
 275 010c 0081      		ld r16,Z
 276 010e 1181      		ldd r17,Z+1
 277 0110 2281      		ldd r18,Z+2
 278 0112 3381      		ldd r19,Z+3
 279 0114 401B      		sub r20,r16
 280 0116 510B      		sbc r21,r17
 281 0118 620B      		sbc r22,r18
 282 011a 730B      		sbc r23,r19
 283 011c 4883      		st Y,r20
 284 011e 5983      		std Y+1,r21
 285 0120 6A83      		std Y+2,r22
 286 0122 7B83      		std Y+3,r23
  65:ros_lib/time.cpp ****     nsec += -rhs.nsec;
 287               		.loc 1 65 0
 288 0124 4C81      		ldd r20,Y+4
 289 0126 5D81      		ldd r21,Y+5
 290 0128 6E81      		ldd r22,Y+6
 291 012a 7F81      		ldd r23,Y+7
 292 012c 0481      		ldd r16,Z+4
 293 012e 1581      		ldd r17,Z+5
 294 0130 2681      		ldd r18,Z+6
 295 0132 3781      		ldd r19,Z+7
 296 0134 401B      		sub r20,r16
 297 0136 510B      		sbc r21,r17
 298 0138 620B      		sbc r22,r18
 299 013a 730B      		sbc r23,r19
 300 013c 4C83      		std Y+4,r20
 301 013e 5D83      		std Y+5,r21
 302 0140 6E83      		std Y+6,r22
 303 0142 7F83      		std Y+7,r23
  66:ros_lib/time.cpp ****     normalizeSecNSec(sec, nsec);
 304               		.loc 1 66 0
 305 0144 BC01      		movw r22,r24
 306               	.LVL12:
 307 0146 6C5F      		subi r22,-4
 308 0148 7F4F      		sbci r23,-1
 309 014a 0E94 0000 		call _ZN3ros16normalizeSecNSecERmS0_
 310               	.LVL13:
  67:ros_lib/time.cpp ****     return *this;
  68:ros_lib/time.cpp ****   }
 311               		.loc 1 68 0
 312 014e CE01      		movw r24,r28
 313               	/* epilogue start */
 314 0150 DF91      		pop r29
 315 0152 CF91      		pop r28
 316               	.LVL14:
 317 0154 1F91      		pop r17
 318 0156 0F91      		pop r16
 319 0158 0895      		ret
 320               		.cfi_endproc
 321               	.LFE93:
 323               	.Letext0:
 324               		.file 2 "./ros_lib/ros/duration.h"
 325               		.file 3 "./ros_lib/ros/time.h"
 326               		.file 4 "./ros_lib/ros/msg.h"
 327               		.file 5 "./ros_lib/ros/node_handle.h"
 328               		.file 6 "./ros_lib/rosserial_msgs/TopicInfo.h"
 329               		.file 7 "./ros_lib/rosserial_msgs/RequestParam.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 time.cpp
     /tmp/cc7bzXOR.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc7bzXOR.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc7bzXOR.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc7bzXOR.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc7bzXOR.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc7bzXOR.s:12     .text:0000000000000000 _ZN3ros16normalizeSecNSecERmS0_
     /tmp/cc7bzXOR.s:107    .text:000000000000005c _ZN3ros4Time8fromNSecEl
     /tmp/cc7bzXOR.s:161    .text:0000000000000096 _ZN3ros4TimepLERKNS_8DurationE
     /tmp/cc7bzXOR.s:243    .text:00000000000000f8 _ZN3ros4TimemIERKNS_8DurationE

UNDEFINED SYMBOLS
__udivmodsi4
__divmodsi4
